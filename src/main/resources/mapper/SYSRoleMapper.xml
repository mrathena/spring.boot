<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrathena.spring.boot.dao.SYSRoleMapper">
	<resultMap id="BaseResultMap" type="com.mrathena.spring.boot.entity.SYSRole">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="resourceIds" jdbcType="VARCHAR" property="resourceIds" />
		<result column="available" jdbcType="BIT" property="available" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, description, resourceIds, available
	</sql>
	<insert id="insert" parameterType="com.mrathena.spring.boot.entity.SYSRole">
		insert into sys_role (id, name, description, 
			resourceIds, available)
		values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
			#{resourceIds,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.mrathena.spring.boot.entity.SYSRole">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="resourceIds != null">
				resourceIds,
			</if>
			<if test="available != null">
				available,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="resourceIds != null">
				#{resourceIds,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				#{available,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.mrathena.spring.boot.entity.SYSRole">
		update sys_role
		set name = #{name,jdbcType=VARCHAR},
			description = #{description,jdbcType=VARCHAR},
			resourceIds = #{resourceIds,jdbcType=VARCHAR},
			available = #{available,jdbcType=BIT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.mrathena.spring.boot.entity.SYSRole">
		update sys_role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="resourceIds != null">
				resourceIds = #{resourceIds,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				available = #{available,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_role
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByRolename" parameterType="java.lang.String" resultType="com.mrathena.spring.boot.entity.SYSRole">
		select * from sys_role where name = #{rolename}
	</select>
	<select id="selectAll" parameterType="java.lang.String" resultType="com.mrathena.spring.boot.entity.SYSRole">
		select * from sys_role order by id
	</select>
	<select id="selectAvaliable" parameterType="java.lang.String" resultType="com.mrathena.spring.boot.entity.SYSRole">
		select * from sys_role where available = 1 order by id
	</select>
	<update id="enableByIds" parameterType="java.util.Map">
		update sys_role set available = 1 where id in
		<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">#{id}</foreach>
	</update>
	<update id="disableByIds" parameterType="java.util.Map">
		update sys_role set available = 0 where id in
		<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">#{id}</foreach>
	</update>
	<delete id="deleteByIds" parameterType="java.util.Map">
		delete from sys_role where id in
		<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">#{id}</foreach>
	</delete>
</mapper>